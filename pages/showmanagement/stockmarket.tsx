import { time } from 'console'
import Head from 'next/head'
import { useEffect, useState } from 'react'
import { getCompanies, getSellers, getPlayerBundles, getPlayerCompany } from '../../api/database'
import Navbar from '../../components/navbar/NavBar'
import PlayerBundleList from '../../components/stockmarket/PlayerBundleList'
import PlayerInformation from '../../components/stockmarket/PlayerInformation'
import SellerInformation from '../../components/stockmarket/SellerInformation'
import styles from '../../styles/Home.module.css'
import { IPlayerCompany } from '../../types/types.database'

/**
 * Display state of game (current stock value, company player info etc.)
 * Currently is under construction
 * @returns
 */
export default function State() {
  const [sellersInformation, setSellersInformation] = useState<any>({})
  const [sharersDisplay, setSharersDisplay] = useState<any[]>([])
  const [allCompanies, setAllCompanies] = useState<any[]>([])
  const [playerBundles, setPlayerBundles] = useState<any[]>([])
  const [playerInformation, setPlayerInformation] = useState<IPlayerCompany>({ name: "loading", id: 0, stockValueScore: 0, publicRelationsIndex: 0, liquidAssets: 0 })
  const [interval, setStateInterval] = useState<NodeJS.Timer | null>(null)
  useEffect(() => {
    if (interval === null) {
      setStateInterval(setInterval(() => {
        getCompanies().then(companies => {
          getSellers().then(newSellers => {
            getPlayerBundles().then(newBundles => {
              getPlayerCompany().then(newPlayer => {
                setAllCompanies(companies)
                setSellersInformation(newSellers)
                setPlayerBundles(newBundles)
                setPlayerInformation(newPlayer)

              })
            })
          })
        })
      }, 1000))
    }
  }, [])

  useEffect(() => {
    if (Object.keys(sellersInformation).length === 0 || Object.keys(playerBundles).length === 0) return;
    const sellers = sellersInformation.sellers;
    const shareBundles = sellersInformation.shareBundles;
    const newDisplay = [<PlayerBundleList key='player' bundles={playerBundles} companies={allCompanies} liquidAssets={playerInformation.liquidAssets} />]
    for (const seller of sellers) {
      newDisplay.push(<SellerInformation key={seller.id} bundles={shareBundles} seller={seller} companies={allCompanies} />)
    }
    setSharersDisplay(newDisplay)
  }, [playerBundles])

  return (
    <div className={styles.container}>
      <Head>
        <title>Admin App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar />
      <main>
        <div style={{ display: "flex", height: "100%" }}>
          <div style={{ position: "fixed" }}>
            <PlayerInformation playerInformation={playerInformation} />
          </div>
          <div style={{ marginLeft: "50%" }}>
            {sharersDisplay}
          </div>
        </div>
      </main>
    </div>
  )
}
